[{"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\index.tsx":"1","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\reportWebVitals.ts":"2","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\App.tsx":"3","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\Login\\Login.tsx":"4","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx":"5","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\home\\Home.tsx":"6","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\cadastroCategoria\\CadastroCategoria.tsx":"7","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\listarCategoria\\ListarCategoria.tsx":"8","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\deletarCategoria\\DeletarCategoria.tsx":"9","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\navbar\\Navbar.tsx":"10","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\cadastroRegimen\\CadastroRegimen.tsx":"11","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\footer\\Footer.tsx":"12","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\listarRegimen\\ListaRegimen.tsx":"13","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\service\\Service.ts":"14"},{"size":501,"mtime":1663693377072,"results":"15","hashOfConfig":"16"},{"size":440,"mtime":1663693377072,"results":"17","hashOfConfig":"16"},{"size":1811,"mtime":1663693915191,"results":"18","hashOfConfig":"16"},{"size":2575,"mtime":1663700158870,"results":"19","hashOfConfig":"16"},{"size":3931,"mtime":1663693377072,"results":"20","hashOfConfig":"16"},{"size":1111,"mtime":1663693377072,"results":"21","hashOfConfig":"16"},{"size":5048,"mtime":1663693377051,"results":"22","hashOfConfig":"16"},{"size":2989,"mtime":1663693377051,"results":"23","hashOfConfig":"16"},{"size":3369,"mtime":1663693377051,"results":"24","hashOfConfig":"16"},{"size":1724,"mtime":1663693377051,"results":"25","hashOfConfig":"16"},{"size":5979,"mtime":1663697527407,"results":"26","hashOfConfig":"16"},{"size":1372,"mtime":1663693377051,"results":"27","hashOfConfig":"16"},{"size":3954,"mtime":1663693377068,"results":"28","hashOfConfig":"16"},{"size":1171,"mtime":1663693377072,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hvs340",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\index.tsx",[],["66","67"],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\reportWebVitals.ts",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\App.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\Login\\Login.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\home\\Home.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\cadastroCategoria\\CadastroCategoria.tsx",["68","69","70"],"import { Button, Container, TextField, Typography } from '@material-ui/core';\r\nimport { findByDisplayValue } from '@testing-library/react';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { buscaId, post, put } from '../../../service/Service';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport './CadastroCategoria.css';\r\n\r\nfunction CadastroCategoria(){\r\n    let navigate = useNavigate();\r\n    const {idCategoria} = useParams<{idCategoria: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>(\r\n        {\r\n            idCategoria: '',\r\n            objetivoDieta: '',\r\n            restricaoSaude: '',\r\n            restricaoFinanceira: false\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            toast.error(\"VocÃª precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n            })\r\n            navigate(\"/login\")\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        if(idCategoria !== undefined){\r\n            findById(idCategoria)\r\n        }\r\n    }, [idCategoria])\r\n\r\n    async function findById(idCategoria: string) {\r\n        buscaId(`/categoria/${idCategoria}`, setCategoria, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedCategoria(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setCategoria({\r\n                ...categoria,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"categoria \" + JSON.stringify(categoria))\r\n    \r\n            if (idCategoria !== undefined) {\r\n                console.log(categoria)\r\n                put(`/categoria`, categoria, setCategoria, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n               \r\n                toast.success(\"Categoria atualizada com sucesso\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined\r\n                    \r\n        \r\n                })\r\n            } else {\r\n                post(`/categoria`, categoria, setCategoria, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n               \r\n                toast.success(\"Categoria cadastrada com sucesso\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined\r\n                    \r\n        \r\n                })\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            navigate('/categorias')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >FormulÃ¡rio de cadastro categoria</Typography>\r\n                <TextField value={categoria.objetivoDieta} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"objetivoDieta\" label=\"objetivo da dieta\" variant=\"outlined\" name=\"objetivoDieta\" margin=\"normal\" fullWidth />\r\n                <TextField value={categoria.restricaoFinanceira} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"restricaoFinanceira\" label=\"restriÃ§Ã£o financeira\" variant=\"outlined\" name=\"restricaoFinanceira\" margin=\"normal\" fullWidth />\r\n                <TextField value={categoria.restricaoSaude} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"restricaoSaude\" label=\"restriÃ§Ã£o de saÃºde\" variant=\"outlined\" name=\"restricaoSaude\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\listarCategoria\\ListarCategoria.tsx",["71","72","73"],"import react,  { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport {toast} from 'react-toastify';\r\nimport { Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './ListarCategoria.css';\r\nimport { busca } from '../../../service/Service';\r\n\r\nfunction ListarCategoria(){\r\nconst [categorias, setCategoria] = useState<Categoria[]>([])\r\nlet navigate = useNavigate();\r\nconst token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n);\r\n\r\nuseEffect(() => {\r\n    if (token === '') {\r\n        toast.error(\"VocÃª precisa estar logado\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined\r\n        })\r\n        navigate(\"/login\")\r\n    }\r\n   \r\n}, [token])\r\n\r\nasync function getCategoria() {\r\n    await busca(\"/categorias\", setCategoria, {\r\n        headers: {\r\n            'Authorization': token\r\n        }\r\n    })\r\n}\r\n\r\nuseEffect(() => {\r\n    getCategoria()\r\n}, [categorias.length])\r\n\r\nreturn (\r\n    <>\r\n    {\r\n      categorias.map(categoria =>(\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Categoria\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.objetivoDieta}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.restricaoFinanceira}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.restricaoSaude}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5} >\r\n\r\n              <Link to={`/formularioCategoria/${categoria.idCategoria}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    Atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarCategoria/${categoria.idCategoria}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    Deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n      }\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default ListarCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\deletarCategoria\\DeletarCategoria.tsx",["74","75","76"],"import React, {useEffect, useState}from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TokenState } from \"../../../store/tokens/tokensReducer\";\r\nimport {useSelector} from 'react-redux';\r\nimport Categoria from \"../../../model/Categoria\";\r\nimport {toast} from \"react-toastify\";\r\nimport { Box } from '@mui/material';\r\nimport {Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport \"./DeletarCategoria.css\";\r\nimport { buscaId, deleteId } from \"../../../service/Service\";\r\n\r\nfunction DeletarCategoria(){\r\nlet navigate = useNavigate();\r\nconst {idCategoria} = useParams<{idCategoria: string}>();\r\nconst token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n);\r\n    const [categoria, setCategoria] = useState<Categoria>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          \r\n            toast.error(\"VocÃª precisa estar logado\", {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined\r\n              \r\n  \r\n          })\r\n            navigate(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        if(idCategoria !== undefined){\r\n            findById(idCategoria)\r\n        }\r\n    }, [idCategoria])\r\n\r\n    async function findById(idCategoria: string) {\r\n        buscaId(`/categoria/${idCategoria}`, setCategoria, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            navigate('/categorias')\r\n            deleteId(`/categoria/${idCategoria}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n           \r\n            toast.success(\"Categoria deletada com sucesso\", {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined\r\n              \r\n  \r\n          })\r\n          }\r\n        \r\n          function nao() {\r\n           navigate('/categorias')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Categoria {categoria?.objetivoDieta} ?\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  NÃ£o\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\navbar\\Navbar.tsx",["77"],"import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Grid } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" >\r\n                <Toolbar variant=\"dense\" className='backF2'>\r\n                    <Grid container justifyContent=\"space-between\" >\r\n                        <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n                            <img src=\"https://i.imgur.com/LwF0S1v.png\" title=\"Logo YourRegimen\" width=\"230px\" />\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" >\r\n                            <Box paddingX={3} >\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\" >\r\n                                    Home\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box paddingX={3}>\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\">\r\n                                    Sobre nÃ³s\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box paddingX={3}>\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\">\r\n                                    Sair\r\n                                </Typography>\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\cadastroRegimen\\CadastroRegimen.tsx",["78","79"],"import React, {ChangeEvent, useState, useEffect} from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './CadastroRegimen.css';\r\nimport Regimen from '../../../model/Regimen';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from \"react-toastify\";\r\nimport Categoria from '../../../model/Categoria';\r\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport { busca, buscaId, post, put } from '../../../service/Service';\r\n\r\n\r\nfunction CadastroRegimen(){\r\n    let navigate = useNavigate();\r\n    const {idRegimen} = useParams<{idRegimen: string}>();\r\n    const [categorias, setCategorias] = useState<Categoria[]>([])\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            toast.error(\"VocÃª precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n            })\r\n            navigate(\"/login\")\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [token])\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>(\r\n        {\r\n            idCategoria: '',\r\n            objetivoDieta: '',\r\n            restricaoSaude: '',\r\n            restricaoFinanceira: false\r\n        }\r\n    );\r\n\r\n    const [regimen, setRegimen] = useState<Regimen>({\r\n        idRegimen: '',\r\n        categoria: categoria,\r\n        regimenName: '',\r\n        foodList: ''\r\n    })\r\n\r\n    useEffect(() => { \r\n        setRegimen({\r\n            ...regimen,\r\n            categoria: categoria\r\n        })\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        getCategorias()\r\n        if (idRegimen !== '') {\r\n            findByIdRegimen(idRegimen)\r\n        }\r\n        \r\n    }, [idRegimen])\r\n    async function getCategorias() {\r\n        await busca(\"/categoria\", setCategorias, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdRegimen(idRegimen: string | undefined) {\r\n        await buscaId(`regimens/${idRegimen}`, setRegimen, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedRegimen(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setRegimen({\r\n            ...regimen,\r\n            [e.target.name]: e.target.value,\r\n            categoria: categoria\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (idRegimen !== \"\") {\r\n            put(`/regimens`, regimen, setRegimen, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            \r\n            toast.success(\"Regimen atualizada com sucesso\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n    \r\n            })\r\n        } else {\r\n            post(`/regimens`, regimen, setRegimen, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            \r\n            toast.success(\"Dieta cadastrada com sucesso\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n    \r\n            })\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        navigate('/regimens')\r\n    }\r\n    \r\n    return(\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n        <form onSubmit={onSubmit}>\r\n            <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >FormulÃ¡rio de cadastro Regimen</Typography>\r\n            <TextField value={regimen.regimenName} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedRegimen(e)} id=\"regimenName\" label=\"Nome da dieta\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n            <TextField value={regimen.foodList} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedRegimen(e)} id=\"foodList\" label=\"Lista de alimentos\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n           \r\n            <FormControl >\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Categoria </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={(e) => buscaId(`/categoria/${e.target.value}`, setCategoria, {\r\n                        headers: {\r\n                            'Authorization': token\r\n                        }\r\n                    })}>\r\n                    {\r\n                        categorias.map(categoria => (\r\n                            <MenuItem value={categoria.idCategoria}>{categoria.objetivoDieta}</MenuItem>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <FormHelperText>Escolha uma categoria para a dieta</FormHelperText>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </FormControl>\r\n        </form>\r\n    </Container>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CadastroRegimen;\r\n\r\n\r\n\r\n","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\footer\\Footer.tsx",["80"],"import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport { GitHub } from '@material-ui/icons';\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid alignItems=\"center\" item xs={12}>\r\n\r\n                    <Box flexDirection=\"row\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className='backF2'>\r\n                        <Box>\r\n                            <Typography variant='h1' className='text'> Acompanhe o nosso projeto:</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <a href=\"https://github.com/dimitrimarinho/YourRegimen\" target=\"_blank\" className='text'>\r\n                                <GitHub className='social' />\r\n                            </a>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box className='back' paddingTop={1} paddingBottom={1}>\r\n                        <Typography variant=\"subtitle2\" align=\"center\" gutterBottom style={{ color: \"white\" }} > YourRegimenÂ© 2022 | Todos os direitos reservados</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\listarRegimen\\ListaRegimen.tsx",["81","82","83","84"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Regimen from '../../../model/Regimen';\r\nimport { Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport {Box} from \"@mui/material\";\r\nimport './ListaRegimen.css';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { busca } from '../../../service/Service';\r\n\r\nfunction ListaRegimen(){\r\n    \r\n        let navigate = useNavigate();\r\n        const [regimens, setRegimens] = useState<Regimen[]>([])\r\n        const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n            (state) => state.tokens\r\n        );\r\n\r\n        useEffect(() => {\r\n            if (token == \"\") {\r\n              \r\n              toast.error(\"VocÃª precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n        \r\n            })\r\n              navigate(\"/login\")\r\n        \r\n            }\r\n          }, [token])\r\n\r\n          async function getRegimen() {\r\n            await busca(\"/regimens\", setRegimens, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            })\r\n          }\r\n        \r\n          useEffect(() => {\r\n        \r\n            getRegimen()\r\n        \r\n          }, [regimens.length])\r\n\r\n          return(\r\n          <>\r\n            { regimens.map(regimen => (\r\n                <Box m={2} >\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Typography color=\"textSecondary\" gutterBottom>\r\n                        Dietas\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h2\">\r\n                        {regimen.regimenName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.foodList}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.objetivoDieta}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.restricaoSaude}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.restricaoFinanceira}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n      \r\n                        <Link to={`/formularioRegimen/${regimen.idRegimen}`}  >\r\n                          <Box mx={1}>\r\n                            <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                              atualizar\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                        <Link to={`/deletarRegimen/${regimen.idRegimen}`} >\r\n                          <Box mx={1}>\r\n                            <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                              deletar\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </Box>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Box>\r\n              ))\r\n            }\r\n          </>\r\n          );\r\n}\r\n\r\nexport default ListaRegimen;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\service\\Service.ts",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":42,"column":8,"nodeType":"95","endLine":42,"endColumn":15,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":48,"column":8,"nodeType":"95","endLine":48,"endColumn":21,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":36,"column":4,"nodeType":"95","endLine":36,"endColumn":11,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":48,"column":4,"nodeType":"95","endLine":48,"endColumn":23,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":21,"column":19,"nodeType":"105","messageId":"106","endLine":21,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":38,"column":8,"nodeType":"95","endLine":38,"endColumn":15,"suggestions":"107"},{"ruleId":"93","severity":1,"message":"97","line":44,"column":8,"nodeType":"95","endLine":44,"endColumn":21,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":29,"nodeType":"111","endLine":13,"endColumn":113},{"ruleId":"93","severity":1,"message":"112","line":59,"column":8,"nodeType":"95","endLine":59,"endColumn":19,"suggestions":"113"},{"ruleId":"93","severity":1,"message":"114","line":67,"column":8,"nodeType":"95","endLine":67,"endColumn":19,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":18,"column":29,"nodeType":"111","messageId":"118","endLine":18,"endColumn":118,"fix":"119"},{"ruleId":"89","severity":1,"message":"120","line":11,"column":8,"nodeType":"91","messageId":"92","endLine":11,"endColumn":17},{"ruleId":"103","severity":1,"message":"104","line":23,"column":23,"nodeType":"105","messageId":"106","endLine":23,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":40,"column":14,"nodeType":"95","endLine":40,"endColumn":21,"suggestions":"121"},{"ruleId":"93","severity":1,"message":"122","line":54,"column":14,"nodeType":"95","endLine":54,"endColumn":31,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'findByDisplayValue' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'findById'. Either include it or remove the dependency array.",["127"],"'react' is defined but never used.",["128"],"React Hook useEffect has a missing dependency: 'getCategoria'. Either include it or remove the dependency array.",["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["130"],["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'regimen'. Either include it or remove the dependency array. You can also do a functional update 'setRegimen(r => ...)' if you only need 'regimen' in the 'setRegimen' call.",["132"],"React Hook useEffect has missing dependencies: 'findByIdRegimen' and 'getCategorias'. Either include them or remove the dependency array.",["133"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"134","text":"135"},"'Categoria' is defined but never used.",["136"],"React Hook useEffect has a missing dependency: 'getRegimen'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"138","fix":"142"},{"desc":"143","fix":"144"},{"desc":"138","fix":"145"},{"desc":"140","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},[835,835]," rel=\"noreferrer\"",{"desc":"138","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [navigate, token]",{"range":"154","text":"155"},"Update the dependencies array to be: [findById, idCategoria]",{"range":"156","text":"157"},{"range":"158","text":"155"},"Update the dependencies array to be: [categorias.length, getCategoria]",{"range":"159","text":"160"},{"range":"161","text":"155"},{"range":"162","text":"157"},"Update the dependencies array to be: [categoria, regimen]",{"range":"163","text":"164"},"Update the dependencies array to be: [findByIdRegimen, getCategorias, idRegimen]",{"range":"165","text":"166"},{"range":"167","text":"155"},"Update the dependencies array to be: [getRegimen, regimens.length]",{"range":"168","text":"169"},[1506,1513],"[navigate, token]",[1634,1647],"[findById, idCategoria]",[1195,1202],[1410,1429],"[categorias.length, getCategoria]",[1301,1308],[1429,1442],[1983,1994],"[categoria, regimen]",[2148,2159],"[findByIdRegimen, getCategorias, idRegimen]",[1402,1409],[1718,1735],"[getRegimen, regimens.length]"]