[{"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\index.tsx":"1","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\reportWebVitals.ts":"2","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\App.tsx":"3","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\Login\\Login.tsx":"4","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx":"5","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\home\\Home.tsx":"6","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\cadastroCategoria\\CadastroCategoria.tsx":"7","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\listarCategoria\\ListarCategoria.tsx":"8","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\deletarCategoria\\DeletarCategoria.tsx":"9","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\navbar\\Navbar.tsx":"10","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\cadastroRegimen\\CadastroRegimen.tsx":"11","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\footer\\Footer.tsx":"12","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\listarRegimen\\ListaRegimen.tsx":"13","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\service\\Service.ts":"14","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\tokens\\actions.ts":"15","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\store.ts":"16","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\tokens\\tokensReducer.ts":"17"},{"size":501,"mtime":1663693377072,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1663693377072,"results":"20","hashOfConfig":"19"},{"size":2107,"mtime":1663759106636,"results":"21","hashOfConfig":"19"},{"size":4828,"mtime":1663758581974,"results":"22","hashOfConfig":"19"},{"size":7058,"mtime":1663713257215,"results":"23","hashOfConfig":"19"},{"size":1111,"mtime":1663693377072,"results":"24","hashOfConfig":"19"},{"size":5048,"mtime":1663693377051,"results":"25","hashOfConfig":"19"},{"size":2989,"mtime":1663693377051,"results":"26","hashOfConfig":"19"},{"size":3369,"mtime":1663693377051,"results":"27","hashOfConfig":"19"},{"size":1724,"mtime":1663693377051,"results":"28","hashOfConfig":"19"},{"size":5979,"mtime":1663697527407,"results":"29","hashOfConfig":"19"},{"size":1372,"mtime":1663693377051,"results":"30","hashOfConfig":"19"},{"size":3954,"mtime":1663693377068,"results":"31","hashOfConfig":"19"},{"size":1185,"mtime":1663759715847,"results":"32","hashOfConfig":"19"},{"size":163,"mtime":1663693377072,"results":"33","hashOfConfig":"19"},{"size":159,"mtime":1663693377072,"results":"34","hashOfConfig":"19"},{"size":381,"mtime":1663705240037,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1hvs340",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\index.tsx",[],["80","81"],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\reportWebVitals.ts",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\App.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\Login\\Login.tsx",["82","83"],"import { Button, Grid, TextField, Typography, Paper } from \"@material-ui/core\";\r\nimport{ Box } from \"@mui/material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PacienteLogin from \"../../model/PacienteLogin\";\r\nimport { addToken } from \"../../store/tokens/actions\";\r\nimport { login } from \"../../service/Service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Login() {\r\n\r\n    let navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [token, setToken] = useState('');\r\n    const [userLogin, setUserLogin] = useState<PacienteLogin>(\r\n        {\r\n            id: '',\r\n            usuario: '',\r\n            senha: '',\r\n            token: ''\r\n        }\r\n        )\r\n\r\n        function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setUserLogin({\r\n                ...userLogin,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n            useEffect(()=>{\r\n                if(token != ''){\r\n                    dispatch(addToken(token));\r\n                    navigate('/home')\r\n                }\r\n            }, [token])\r\n\r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>){\r\n            e.preventDefault();\r\n            try{\r\n                await login('/pacientes/logar', userLogin, setToken)\r\n                toast.success('Usuário logado com sucesso!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }catch(error){\r\n                toast.error('Dados do usuário inconsistentes. Erro ao logar!', {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined,\r\n                    });\r\n            }\r\n        }\r\n        \r\n    return (\r\n        <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Grid alignItems=\"center\" xs={12} >\r\n                <Box width='100%' height='100vh' display={'flex'} alignItems='center' paddingLeft={'10%'} className='imagem' >\r\n                    <Paper style={{ padding: '32px 48px', borderRadius: '16px' }} className=\"login-c\">\r\n                        <Box maxWidth={'420px'}>\r\n                            <form onSubmit={onSubmit}>\r\n                                <Typography variant=\"h3\" gutterBottom align=\"center\" component=\"h3\" className=\"texto\">\r\n                                    Bem vindo!\r\n                                </Typography>\r\n                                <TextField value={userLogin.usuario} onChange={(e:ChangeEvent<HTMLInputElement>)=> updatedModel(e)} id='usuario' label='Usuário de acesso' variant='outlined' name='usuario' margin='normal' fullWidth required />\r\n                                <TextField value={userLogin.senha} onChange={(e:ChangeEvent<HTMLInputElement>)=> updatedModel(e)} id='senha' label='Senha' variant='outlined' name='senha' margin='normal' type='password' fullWidth required />\r\n                                <Box marginTop={2} textAlign=\"center\">\r\n                                    <Button type='submit' className=\"botao\">\r\n                                        Logar\r\n                                    </Button>\r\n                                </Box>\r\n                            </form >\r\n                            <Box display=\"flex\" justifyContent=\"center\" marginTop={2}>\r\n                                <Box marginRight={1}>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\r\n                                        Não tem uma conta?\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Link to='/cadastroUsuario' style={{ textDecoration: 'none', color: '#40352C' }}>\r\n                                    <Typography variant=\"subtitle1\" gutterBottom align=\"center\" className=\"cursor\">\r\n                                        Cadastre-se\r\n                                    </Typography>\r\n                                </Link>\r\n                            </Box>\r\n                        </Box>\r\n                    </Paper>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\cadastroUsuario\\CadastroUsuario.tsx",["84","85","86"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Button, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\r\nimport { Box } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './CadastroUsuario.css';\r\nimport Paciente from \"../../model/Paciente\";\r\nimport { cadastroUsuario } from \"../../service/Service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction CadastroUsuario() {\r\n\r\n    let navigate = useNavigate();\r\n    const [confirmarSenha, setConfirmarSenha] = useState<String>(\"\")\r\n    const [user, setUser] = useState<Paciente>(\r\n        {\r\n            idPaciente: '',\r\n            nomePaciente: '',\r\n            loginPaciente: '',\r\n            senhaPaciente: '',\r\n            altura: 0,\r\n            peso: 0,\r\n            maxCalories: 0,\r\n            minCalories: 0\r\n        })\r\n\r\n    const [userResult, setUserResult] = useState<Paciente>(\r\n        {\r\n            idPaciente: '',\r\n            nomePaciente: '',\r\n            loginPaciente: '',\r\n            senhaPaciente: '',\r\n            altura: 0,\r\n            peso: 0,\r\n            maxCalories: 0,\r\n            minCalories: 0\r\n        })\r\n\r\n    useEffect(() => {\r\n        if (userResult.idPaciente != '') {\r\n            navigate(\"/login\")\r\n        }\r\n    }, [userResult])\r\n\r\n\r\n    function confirmarSenhaHandle(e: ChangeEvent<HTMLInputElement>) {\r\n        setConfirmarSenha(e.target.value)\r\n    }\r\n\r\n\r\n    function updatedModel(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        if (confirmarSenha == user.senhaPaciente) {\r\n            cadastroUsuario(`/pacientes/cadastrar`, user, setUserResult)\r\n            toast.success('Usuario cadastrado com sucesso', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            toast.error('Dados inconsistentes. Favor verificar as informações de cadastro.', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        //falta terminar a estilização e dividir o formulário em 2 colunas, lado a lado.\r\n        <Grid className=\"GridContainer\" container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" >\r\n            <Grid alignItems=\"center\" xs={12} >\r\n                <Box width='100vw' height='100vh' className=\"bgCadastroFoto\" display={'flex'} alignItems='center' flexDirection=\"row\">\r\n                    <Paper style={{ padding: '32px 48px', borderRadius: '16px', maxWidth: \"480px\" }} elevation={12} className=\"paperCadastro\">\r\n                        <Box display=\"flex\" justifyContent=\"center\" className='boxJaTemConta' flexDirection='row'>\r\n                            <Box marginRight={1}>\r\n                                <Typography variant=\"subtitle1\" gutterBottom align=\"center\">\r\n                                    Já tem uma conta?\r\n                                </Typography>\r\n                            </Box>\r\n                            <Link to='/login' style={{ textDecoration: 'none', color: '#40352C' }}>\r\n                                <Typography variant=\"subtitle1\" gutterBottom align=\"center\" className=\"cursor\">\r\n                                    Fazer login\r\n                                </Typography>\r\n                            </Link>\r\n                        </Box >\r\n                        <Box className=\"boxCadastro\" flexDirection=\"row\">\r\n                            <form onSubmit={onSubmit}>\r\n\r\n                                <Typography variant='h3' gutterBottom color='primary' component='h3' align='center' className='paperCadastroTitulo'>Cadastrar</Typography>\r\n                                <TextField value={user.nomePaciente} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='nome' label='Nome completo' variant='outlined' name='nomePaciente' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={user.loginPaciente} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='usuario' label='E-mail' variant='outlined' name='loginPaciente' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={user.senhaPaciente} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='senha' label='Senha ' variant='outlined' name='senhaPaciente' margin='normal' type='password' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={confirmarSenha} onChange={(e: ChangeEvent<HTMLInputElement>) => confirmarSenhaHandle(e)} id='confirmarSenha' label='Confirme a sua senha' variant='outlined' name='confirmarSenha' margin='normal' type='password' fullWidth className=\"tfCadastro\" required />\r\n\r\n\r\n                                <TextField value={user.altura} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='altura' label='Altura' variant='outlined' name='altura' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={user.peso} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='peso' label='Peso(kg)' variant='outlined' name='peso' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={user.maxCalories} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='maxCalories' label='Quantidade máxima de calorias necessárias' variant='outlined' name='maxCalories' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n                                <TextField value={user.minCalories} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedModel(e)} id='minCalories' label='Quantidade mínima de calorias necessárias' variant='outlined' name='minCalories' margin='normal' fullWidth className=\"tfCadastro\" required />\r\n\r\n                                <Box marginTop={2} textAlign='center'>\r\n                                    <Button type='submit' variant='contained' color='primary' fullWidth className='btnCadastrar'>\r\n                                        Cadastrar\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        </Box>\r\n                    </Paper>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default CadastroUsuario;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\paginas\\home\\Home.tsx",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\cadastroCategoria\\CadastroCategoria.tsx",["87","88","89"],"import { Button, Container, TextField, Typography } from '@material-ui/core';\r\nimport { findByDisplayValue } from '@testing-library/react';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { buscaId, post, put } from '../../../service/Service';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport './CadastroCategoria.css';\r\n\r\nfunction CadastroCategoria(){\r\n    let navigate = useNavigate();\r\n    const {idCategoria} = useParams<{idCategoria: string}>();\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>(\r\n        {\r\n            idCategoria: '',\r\n            objetivoDieta: '',\r\n            restricaoSaude: '',\r\n            restricaoFinanceira: false\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            toast.error(\"Você precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n            })\r\n            navigate(\"/login\")\r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        if(idCategoria !== undefined){\r\n            findById(idCategoria)\r\n        }\r\n    }, [idCategoria])\r\n\r\n    async function findById(idCategoria: string) {\r\n        buscaId(`/categoria/${idCategoria}`, setCategoria, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedCategoria(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setCategoria({\r\n                ...categoria,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"categoria \" + JSON.stringify(categoria))\r\n    \r\n            if (idCategoria !== undefined) {\r\n                console.log(categoria)\r\n                put(`/categoria`, categoria, setCategoria, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n               \r\n                toast.success(\"Categoria atualizada com sucesso\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined\r\n                    \r\n        \r\n                })\r\n            } else {\r\n                post(`/categoria`, categoria, setCategoria, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n               \r\n                toast.success(\"Categoria cadastrada com sucesso\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 2000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: false,\r\n                    draggable: false,\r\n                    theme: \"colored\",\r\n                    progress: undefined\r\n                    \r\n        \r\n                })\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            navigate('/categorias')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro categoria</Typography>\r\n                <TextField value={categoria.objetivoDieta} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"objetivoDieta\" label=\"objetivo da dieta\" variant=\"outlined\" name=\"objetivoDieta\" margin=\"normal\" fullWidth />\r\n                <TextField value={categoria.restricaoFinanceira} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"restricaoFinanceira\" label=\"restrição financeira\" variant=\"outlined\" name=\"restricaoFinanceira\" margin=\"normal\" fullWidth />\r\n                <TextField value={categoria.restricaoSaude} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedCategoria(e)} id=\"restricaoSaude\" label=\"restrição de saúde\" variant=\"outlined\" name=\"restricaoSaude\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\listarCategoria\\ListarCategoria.tsx",["90","91","92"],"import react,  { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { useSelector } from 'react-redux';\r\nimport {toast} from 'react-toastify';\r\nimport { Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './ListarCategoria.css';\r\nimport { busca } from '../../../service/Service';\r\n\r\nfunction ListarCategoria(){\r\nconst [categorias, setCategoria] = useState<Categoria[]>([])\r\nlet navigate = useNavigate();\r\nconst token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n);\r\n\r\nuseEffect(() => {\r\n    if (token === '') {\r\n        toast.error(\"Você precisa estar logado\", {\r\n            position: \"top-right\",\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            theme: \"colored\",\r\n            progress: undefined\r\n        })\r\n        navigate(\"/login\")\r\n    }\r\n   \r\n}, [token])\r\n\r\nasync function getCategoria() {\r\n    await busca(\"/categorias\", setCategoria, {\r\n        headers: {\r\n            'Authorization': token\r\n        }\r\n    })\r\n}\r\n\r\nuseEffect(() => {\r\n    getCategoria()\r\n}, [categorias.length])\r\n\r\nreturn (\r\n    <>\r\n    {\r\n      categorias.map(categoria =>(\r\n      <Box m={2} >\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Categoria\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.objetivoDieta}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.restricaoFinanceira}\r\n            </Typography>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n             {categoria.restricaoSaude}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"center\" mb={1.5} >\r\n\r\n              <Link to={`/formularioCategoria/${categoria.idCategoria}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                    Atualizar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n              <Link to={`/deletarCategoria/${categoria.idCategoria}`} className=\"text-decorator-none\">\r\n                <Box mx={1}>\r\n                  <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                    Deletar\r\n                  </Button>\r\n                </Box>\r\n              </Link>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n      ))\r\n      }\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default ListarCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\categorias\\deletarCategoria\\DeletarCategoria.tsx",["93","94","95"],"import React, {useEffect, useState}from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { TokenState } from \"../../../store/tokens/tokensReducer\";\r\nimport {useSelector} from 'react-redux';\r\nimport Categoria from \"../../../model/Categoria\";\r\nimport {toast} from \"react-toastify\";\r\nimport { Box } from '@mui/material';\r\nimport {Card, CardActions, CardContent, Button, Typography} from '@material-ui/core';\r\nimport \"./DeletarCategoria.css\";\r\nimport { buscaId, deleteId } from \"../../../service/Service\";\r\n\r\nfunction DeletarCategoria(){\r\nlet navigate = useNavigate();\r\nconst {idCategoria} = useParams<{idCategoria: string}>();\r\nconst token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n    (state) => state.tokens\r\n);\r\n    const [categoria, setCategoria] = useState<Categoria>()\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n          \r\n            toast.error(\"Você precisa estar logado\", {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined\r\n              \r\n  \r\n          })\r\n            navigate(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() => {\r\n        if(idCategoria !== undefined){\r\n            findById(idCategoria)\r\n        }\r\n    }, [idCategoria])\r\n\r\n    async function findById(idCategoria: string) {\r\n        buscaId(`/categoria/${idCategoria}`, setCategoria, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function sim() {\r\n            navigate('/categorias')\r\n            deleteId(`/categoria/${idCategoria}`, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            });\r\n           \r\n            toast.success(\"Categoria deletada com sucesso\", {\r\n              position: \"top-right\",\r\n              autoClose: 2000,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              theme: \"colored\",\r\n              progress: undefined\r\n              \r\n  \r\n          })\r\n          }\r\n        \r\n          function nao() {\r\n           navigate('/categorias')\r\n          }\r\n          \r\n  return (\r\n    <>\r\n      <Box m={2}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n            <Box justifyContent=\"center\">\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                Deseja deletar a Categoria {categoria?.objetivoDieta} ?\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"start\" ml={1.0} mb={2} >\r\n              <Box mx={2}>\r\n                <Button onClick={sim} variant=\"contained\" className=\"marginLeft\" size='large' color=\"primary\">\r\n                  Sim\r\n                </Button>\r\n              </Box>\r\n              <Box mx={2}>\r\n                <Button  onClick={nao} variant=\"contained\" size='large' color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default DeletarCategoria;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\navbar\\Navbar.tsx",["96"],"import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Grid } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport './Navbar.css'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <>\r\n            <AppBar position=\"sticky\" >\r\n                <Toolbar variant=\"dense\" className='backF2'>\r\n                    <Grid container justifyContent=\"space-between\" >\r\n                        <Box display=\"flex\" justifyContent=\"flex-start\" alignItems=\"center\" >\r\n                            <img src=\"https://i.imgur.com/LwF0S1v.png\" title=\"Logo YourRegimen\" width=\"230px\" />\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" >\r\n                            <Box paddingX={3} >\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\" >\r\n                                    Home\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box paddingX={3}>\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\">\r\n                                    Sobre nós\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box paddingX={3}>\r\n                                <Typography className=\"padding-left-navbar\" variant=\"h6\" color=\"inherit\">\r\n                                    Sair\r\n                                </Typography>\r\n                            </Box>\r\n                        </Box>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\cadastroRegimen\\CadastroRegimen.tsx",["97","98"],"import React, {ChangeEvent, useState, useEffect} from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './CadastroRegimen.css';\r\nimport Regimen from '../../../model/Regimen';\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport {toast} from \"react-toastify\";\r\nimport Categoria from '../../../model/Categoria';\r\nimport { Button, Container, FormControl, FormHelperText, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport { busca, buscaId, post, put } from '../../../service/Service';\r\n\r\n\r\nfunction CadastroRegimen(){\r\n    let navigate = useNavigate();\r\n    const {idRegimen} = useParams<{idRegimen: string}>();\r\n    const [categorias, setCategorias] = useState<Categoria[]>([])\r\n    const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n        (state) => state.tokens\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            toast.error(\"Você precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n            })\r\n            navigate(\"/login\")\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [token])\r\n\r\n    const [categoria, setCategoria] = useState<Categoria>(\r\n        {\r\n            idCategoria: '',\r\n            objetivoDieta: '',\r\n            restricaoSaude: '',\r\n            restricaoFinanceira: false\r\n        }\r\n    );\r\n\r\n    const [regimen, setRegimen] = useState<Regimen>({\r\n        idRegimen: '',\r\n        categoria: categoria,\r\n        regimenName: '',\r\n        foodList: ''\r\n    })\r\n\r\n    useEffect(() => { \r\n        setRegimen({\r\n            ...regimen,\r\n            categoria: categoria\r\n        })\r\n    }, [categoria])\r\n\r\n    useEffect(() => {\r\n        getCategorias()\r\n        if (idRegimen !== '') {\r\n            findByIdRegimen(idRegimen)\r\n        }\r\n        \r\n    }, [idRegimen])\r\n    async function getCategorias() {\r\n        await busca(\"/categoria\", setCategorias, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdRegimen(idRegimen: string | undefined) {\r\n        await buscaId(`regimens/${idRegimen}`, setRegimen, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedRegimen(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setRegimen({\r\n            ...regimen,\r\n            [e.target.name]: e.target.value,\r\n            categoria: categoria\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (idRegimen !== \"\") {\r\n            put(`/regimens`, regimen, setRegimen, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            \r\n            toast.success(\"Regimen atualizada com sucesso\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n    \r\n            })\r\n        } else {\r\n            post(`/regimens`, regimen, setRegimen, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            \r\n            toast.success(\"Dieta cadastrada com sucesso\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n    \r\n            })\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        navigate('/regimens')\r\n    }\r\n    \r\n    return(\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n        <form onSubmit={onSubmit}>\r\n            <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro Regimen</Typography>\r\n            <TextField value={regimen.regimenName} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedRegimen(e)} id=\"regimenName\" label=\"Nome da dieta\" name=\"texto\" variant=\"outlined\" margin=\"normal\" fullWidth />\r\n            <TextField value={regimen.foodList} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedRegimen(e)} id=\"foodList\" label=\"Lista de alimentos\" variant=\"outlined\" name=\"titulo\" margin=\"normal\" fullWidth />\r\n           \r\n            <FormControl >\r\n                <InputLabel id=\"demo-simple-select-helper-label\">Categoria </InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"demo-simple-select-helper\"\r\n                    onChange={(e) => buscaId(`/categoria/${e.target.value}`, setCategoria, {\r\n                        headers: {\r\n                            'Authorization': token\r\n                        }\r\n                    })}>\r\n                    {\r\n                        categorias.map(categoria => (\r\n                            <MenuItem value={categoria.idCategoria}>{categoria.objetivoDieta}</MenuItem>\r\n                        ))\r\n                    }\r\n                </Select>\r\n                <FormHelperText>Escolha uma categoria para a dieta</FormHelperText>\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </FormControl>\r\n        </form>\r\n    </Container>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CadastroRegimen;\r\n\r\n\r\n\r\n","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\estaticos\\footer\\Footer.tsx",["99"],"import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { Box } from '@mui/material';\r\nimport { GitHub } from '@material-ui/icons';\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid alignItems=\"center\" item xs={12}>\r\n\r\n                    <Box flexDirection=\"row\" display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className='backF2'>\r\n                        <Box>\r\n                            <Typography variant='h1' className='text'> Acompanhe o nosso projeto:</Typography>\r\n                        </Box>\r\n                        <Box>\r\n                            <a href=\"https://github.com/dimitrimarinho/YourRegimen\" target=\"_blank\" className='text'>\r\n                                <GitHub className='social' />\r\n                            </a>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box className='back' paddingTop={1} paddingBottom={1}>\r\n                        <Typography variant=\"subtitle2\" align=\"center\" gutterBottom style={{ color: \"white\" }} > YourRegimen© 2022 | Todos os direitos reservados</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\components\\regimens\\listarRegimen\\ListaRegimen.tsx",["100","101","102","103"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Regimen from '../../../model/Regimen';\r\nimport { Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\nimport {Box} from \"@mui/material\";\r\nimport './ListaRegimen.css';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { TokenState } from '../../../store/tokens/tokensReducer';\r\nimport { toast } from 'react-toastify';\r\nimport Categoria from '../../../model/Categoria';\r\nimport { busca } from '../../../service/Service';\r\n\r\nfunction ListaRegimen(){\r\n    \r\n        let navigate = useNavigate();\r\n        const [regimens, setRegimens] = useState<Regimen[]>([])\r\n        const token = useSelector<TokenState, TokenState[\"tokens\"]>(\r\n            (state) => state.tokens\r\n        );\r\n\r\n        useEffect(() => {\r\n            if (token == \"\") {\r\n              \r\n              toast.error(\"Você precisa estar logado\", {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: false,\r\n                draggable: false,\r\n                theme: \"colored\",\r\n                progress: undefined\r\n                \r\n        \r\n            })\r\n              navigate(\"/login\")\r\n        \r\n            }\r\n          }, [token])\r\n\r\n          async function getRegimen() {\r\n            await busca(\"/regimens\", setRegimens, {\r\n              headers: {\r\n                'Authorization': token\r\n              }\r\n            })\r\n          }\r\n        \r\n          useEffect(() => {\r\n        \r\n            getRegimen()\r\n        \r\n          }, [regimens.length])\r\n\r\n          return(\r\n          <>\r\n            { regimens.map(regimen => (\r\n                <Box m={2} >\r\n                  <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                      <Typography color=\"textSecondary\" gutterBottom>\r\n                        Dietas\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h2\">\r\n                        {regimen.regimenName}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.foodList}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.objetivoDieta}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.restricaoSaude}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" component=\"p\">\r\n                        {regimen.categoria?.restricaoFinanceira}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Box display=\"flex\" justifyContent=\"center\" mb={1.5}>\r\n      \r\n                        <Link to={`/formularioRegimen/${regimen.idRegimen}`}  >\r\n                          <Box mx={1}>\r\n                            <Button variant=\"contained\" className=\"marginLeft\" size='small' color=\"primary\" >\r\n                              atualizar\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                        <Link to={`/deletarRegimen/${regimen.idRegimen}`} >\r\n                          <Box mx={1}>\r\n                            <Button variant=\"contained\" size='small' color=\"secondary\">\r\n                              deletar\r\n                            </Button>\r\n                          </Box>\r\n                        </Link>\r\n                      </Box>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Box>\r\n              ))\r\n            }\r\n          </>\r\n          );\r\n}\r\n\r\nexport default ListaRegimen;","C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\service\\Service.ts",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\tokens\\actions.ts",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\store.ts",[],"C:\\Users\\iapn\\My Private Documents\\clone\\YourRegimen\\front-end\\youregimen\\src\\store\\tokens\\tokensReducer.ts",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":35,"column":26,"nodeType":"110","messageId":"111","endLine":35,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":39,"column":16,"nodeType":"114","endLine":39,"endColumn":23,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"109","line":39,"column":35,"nodeType":"110","messageId":"111","endLine":39,"endColumn":37},{"ruleId":"112","severity":1,"message":"116","line":42,"column":8,"nodeType":"114","endLine":42,"endColumn":20,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":60,"column":28,"nodeType":"110","messageId":"111","endLine":60,"endColumn":30},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":28},{"ruleId":"112","severity":1,"message":"116","line":42,"column":8,"nodeType":"114","endLine":42,"endColumn":15,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"124","line":48,"column":8,"nodeType":"114","endLine":48,"endColumn":21,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"126","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"116","line":36,"column":4,"nodeType":"114","endLine":36,"endColumn":11,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":48,"column":4,"nodeType":"114","endLine":48,"endColumn":23,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"118","line":21,"column":19,"nodeType":"110","messageId":"111","endLine":21,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":38,"column":8,"nodeType":"114","endLine":38,"endColumn":15,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"124","line":44,"column":8,"nodeType":"114","endLine":44,"endColumn":21,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":13,"column":29,"nodeType":"134","endLine":13,"endColumn":113},{"ruleId":"112","severity":1,"message":"135","line":59,"column":8,"nodeType":"114","endLine":59,"endColumn":19,"suggestions":"136"},{"ruleId":"112","severity":1,"message":"137","line":67,"column":8,"nodeType":"114","endLine":67,"endColumn":19,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":18,"column":29,"nodeType":"134","messageId":"141","endLine":18,"endColumn":118,"fix":"142"},{"ruleId":"119","severity":1,"message":"143","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":17},{"ruleId":"108","severity":1,"message":"118","line":23,"column":23,"nodeType":"110","messageId":"111","endLine":23,"endColumn":25},{"ruleId":"112","severity":1,"message":"116","line":40,"column":14,"nodeType":"114","endLine":40,"endColumn":21,"suggestions":"144"},{"ruleId":"112","severity":1,"message":"145","line":54,"column":14,"nodeType":"114","endLine":54,"endColumn":31,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["150"],"Expected '===' and instead saw '=='.","@typescript-eslint/no-unused-vars","'findByDisplayValue' is defined but never used.","Identifier","unusedVar",["151"],"React Hook useEffect has a missing dependency: 'findById'. Either include it or remove the dependency array.",["152"],"'react' is defined but never used.",["153"],"React Hook useEffect has a missing dependency: 'getCategoria'. Either include it or remove the dependency array.",["154"],["155"],["156"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'regimen'. Either include it or remove the dependency array. You can also do a functional update 'setRegimen(r => ...)' if you only need 'regimen' in the 'setRegimen' call.",["157"],"React Hook useEffect has missing dependencies: 'findByIdRegimen' and 'getCategorias'. Either include them or remove the dependency array.",["158"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"159","text":"160"},"'Categoria' is defined but never used.",["161"],"React Hook useEffect has a missing dependency: 'getRegimen'. Either include it or remove the dependency array.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"167","fix":"171"},{"desc":"172","fix":"173"},{"desc":"167","fix":"174"},{"desc":"169","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},[835,835]," rel=\"noreferrer\"",{"desc":"167","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [dispatch, navigate, token]",{"range":"183","text":"184"},"Update the dependencies array to be: [navigate, userResult]",{"range":"185","text":"186"},"Update the dependencies array to be: [navigate, token]",{"range":"187","text":"188"},"Update the dependencies array to be: [findById, idCategoria]",{"range":"189","text":"190"},{"range":"191","text":"188"},"Update the dependencies array to be: [categorias.length, getCategoria]",{"range":"192","text":"193"},{"range":"194","text":"188"},{"range":"195","text":"190"},"Update the dependencies array to be: [categoria, regimen]",{"range":"196","text":"197"},"Update the dependencies array to be: [findByIdRegimen, getCategorias, idRegimen]",{"range":"198","text":"199"},{"range":"200","text":"188"},"Update the dependencies array to be: [getRegimen, regimens.length]",{"range":"201","text":"202"},[1231,1238],"[dispatch, navigate, token]",[1288,1300],"[navigate, userResult]",[1506,1513],"[navigate, token]",[1634,1647],"[findById, idCategoria]",[1195,1202],[1410,1429],"[categorias.length, getCategoria]",[1301,1308],[1429,1442],[1983,1994],"[categoria, regimen]",[2148,2159],"[findByIdRegimen, getCategorias, idRegimen]",[1402,1409],[1718,1735],"[getRegimen, regimens.length]"]